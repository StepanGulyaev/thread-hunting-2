---
title: "Лабораторная работа №6"
author: "Гуляев Степан БИСО-01-20"
format: 
  md:
    output-file: README.md
editor: visual
---

Лабораторная работа №5

## Цель работы

1.  Получить знания о методах исследования радиоэлектронной обстановки
2.  Составить представление о механизмах работы Wi-Fi сетей на канальном и сетевом уровне модели OSI
3.  Закрепить практические навыки использования языка программирования R для обработки данных
4.  Закрепить знания основных функций обработки данных экосистемы tidyverse языка R

## Исходные данные

1.  ОС Windows 10
2.  RStudio Desktop
3.  Интерпретатор R v-4.3.1
4.  dplyr

## Ход работы

1.  Установить пакет 'dplyr'
2.  Импорт и подготовка данных
3.  Анализ данных

##Задания

### Установка пакетов

```{r}
library(dplyr)
library(jsonlite)
library(tidyr)
library(xml2)
library(rvest)
```

### Импорт и подготовка данных DNS

#### 1. Импортируйте данные в R

```{r}
url <- "https://storage.yandexcloud.net/iamcth-data/dataset.tar.gz"

download.file(url, destfile = tf <- tempfile(fileext = ".tar.gz"), mode = "wb")

tmp <- tempdir()
untar(tf, exdir = tmp)

json_files <- list.files(tmp, pattern="\\.json$", full.names = TRUE, recursive = TRUE)
info <- stream_in(file(json_files))
```

#### 2. Привести датасеты в вид "аккуратных данных", преобразовать типы столбцов в соответствии с типом данных

```{r}
info <- info %>%
  mutate(`@timestamp` = as.POSIXct(`@timestamp`, format = "%Y-%m-%dT%H:%M:%OSZ", tz = "UTC")) %>%
  rename(timestamp = `@timestamp`, metadata = `@metadata`)
```

#### 3. Просмотрите общую структуру данных с помощью функции glimpse()

```{r}
info %>% glimpse
```

### Анализ данных

#### 1. Раскройте датафрейм избавившись от вложенных датафреймов. Для обнаружения таких можно использовать функцию dplyr::glimpse() , а для раскрытия вложенности -- tidyr::unnest() . Обратите внимание, что при раскрытии теряются внешние названия колонок -- это можно предотвратить если использовать параметр tidyr::unnest(..., names_sep = ).

```{r}
info_unnest <- info %>%
  unnest(c(metadata, event, log, winlog, ecs, host, agent), names_sep = ".")

info_unnest %>% glimpse
```

#### 2. Минимизируйте количество колонок в датафрейме -- уберите колоки с единственным значением параметра.

```{r}
info_clear <- info_unnest %>%
  select(-metadata.beat, -metadata.type, -metadata.version, -metadata.topic, 
         -event.kind, -winlog.api, -agent.ephemeral_id, -agent.hostname, 
         -agent.id, -agent.version, -agent.type)

info_clear %>% glimpse
```

#### 3. Какое количество хостов представлено в данном датасете?

```{r}
info_clear %>% select(host.name) %>% unique %>% count() 
```

#### 4. Подготовьте датафрейм с расшифровкой Windows Event_ID, приведите типы данных к типу их значений.

```{r}
webpage_url <- "https://learn.microsoft.com/en-us/windows-server/identity/ad-ds/plan/appendix-l--events-to-monitor"
webpage <- xml2::read_html(webpage_url)
event_info <- rvest::html_table(webpage)[[1]]

event_info %>% glimpse
```

```{r}
event_info <- event_info %>%
  mutate_at(vars(`Current Windows Event ID`, `Legacy Windows Event ID`),trimws) %>%
  mutate_at(vars(`Current Windows Event ID`, `Legacy Windows Event ID`),na_if,"N/A") %>%
  mutate_at(vars(`Current Windows Event ID`, `Legacy Windows Event ID`), as.integer) %>%
  rename(c(Current_Windows_Event_ID = `Current Windows Event ID`, 
           Legacy_Windows_Event_ID = `Legacy Windows Event ID`, 
           Potential_Criticality = `Potential Criticality`, 
           Event_Summary = `Event Summary`))

event_info %>% glimpse
```

#### 5. Есть ли в логе события с высоким и средним уровнем значимости? Сколько их?

```{r}
event_info %>% 
  group_by(Potential_Criticality) %>%
  summarize(count = n()) %>%
  arrange(desc(count))
```

С средним: 79 
С высоким: 9

## Оценка результата

В результате лабораторной работы были выполнены задания по анализу данных трафика Wi-Fi сетей

## Вывод

В ходе лабораторной работы были импортированы, подготовлены, проанализированы данные трафика Wi-Fi сетей

